Index: time_registration/src/main/java/com/example/time_registration/model/entities/TreatmentAppointment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/entities/TreatmentAppointment.java b/time_registration/src/main/java/com/example/time_registration/model/entities/TreatmentAppointment.java
new file mode 100644
--- /dev/null	(date 1702811234433)
+++ b/time_registration/src/main/java/com/example/time_registration/model/entities/TreatmentAppointment.java	(date 1702811234433)
@@ -0,0 +1,37 @@
+package com.example.time_registration.model.entities;
+
+import com.example.time_registration.model.enums.TreatmentType;
+
+import java.time.LocalDateTime;
+
+// Эмчилгээний цаг
+public class TreatmentAppointment extends Appointment {
+
+    private TreatmentType treatmentType;
+
+    public TreatmentAppointment(int id, LocalDateTime time, User user) {
+        super(id, time, user);
+    }
+
+    public TreatmentAppointment(LocalDateTime time, User user) {
+        super(time, user);
+    }
+
+    public TreatmentAppointment(int id, LocalDateTime time, User user, TreatmentType treatmentType) {
+        super(id, time, user);
+        this.treatmentType = treatmentType;
+    }
+
+    public TreatmentAppointment(LocalDateTime time, User user, TreatmentType treatmentType) {
+        super(time, user);
+        this.treatmentType = treatmentType;
+    }
+
+    public TreatmentType getTreatmentType() {
+        return treatmentType;
+    }
+
+    public void setTreatmentType(TreatmentType treatmentType) {
+        this.treatmentType = treatmentType;
+    }
+}
Index: time_registration/src/main/java/com/example/time_registration/model/statuses/WaitingStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/statuses/WaitingStatus.java b/time_registration/src/main/java/com/example/time_registration/model/statuses/WaitingStatus.java
new file mode 100644
--- /dev/null	(date 1702811234441)
+++ b/time_registration/src/main/java/com/example/time_registration/model/statuses/WaitingStatus.java	(date 1702811234441)
@@ -0,0 +1,33 @@
+package com.example.time_registration.model.statuses;
+
+import com.example.time_registration.controller.RegisterController;
+import com.example.time_registration.model.entities.Appointment;
+import org.slf4j.LoggerFactory;
+
+public class WaitingStatus implements AppointmentStatus {
+    private Appointment appointment;
+
+    public WaitingStatus(Appointment appointment) {
+        this.appointment = appointment;
+    }
+
+    @Override
+    public void done() {
+        appointment.setStatus(new DoneStatus(appointment));
+        System.out.println("Appointment has been marked as done.");
+        LoggerFactory.getLogger(RegisterController.class).info("Appointment has been marked as done.");
+    }
+
+    @Override
+    public void canceled() {
+        appointment.setStatus(new CancelledStatus(appointment));
+        System.out.println("Appointment has been canceled.");
+        LoggerFactory.getLogger(RegisterController.class).info("Appointment has been canceled.");
+    }
+
+    @Override
+    public void waiting() {
+        System.out.println("Appointment is already in the waiting state.");
+        LoggerFactory.getLogger(RegisterController.class).info("Appointment is already in the waiting state.");
+    }
+}
\ No newline at end of file
Index: time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentStatusEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentStatusEnum.java b/time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentStatusEnum.java
new file mode 100644
--- /dev/null	(date 1702811234435)
+++ b/time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentStatusEnum.java	(date 1702811234435)
@@ -0,0 +1,9 @@
+package com.example.time_registration.model.enums;
+
+// Цагын статусын төлөвүүд
+public enum AppointmentStatusEnum {
+    WAITING,
+    DONE,
+    CANCELLED,
+    UNKNOWN,
+}
Index: time_registration/src/main/java/com/example/time_registration/model/entities/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/entities/User.java b/time_registration/src/main/java/com/example/time_registration/model/entities/User.java
new file mode 100644
--- /dev/null	(date 1702811234434)
+++ b/time_registration/src/main/java/com/example/time_registration/model/entities/User.java	(date 1702811234434)
@@ -0,0 +1,34 @@
+package com.example.time_registration.model.entities;
+
+import com.example.time_registration.model.enums.UserType;
+
+// Энгийн хэрэглэгч
+public class User extends Person {
+    private Appointment appointment;
+
+    public User(String name, String username, String phoneNumber, String password) {
+        super(name, username, phoneNumber, password, UserType.PATIENT);
+    }
+
+    public User(String name, String username, String phoneNumber, String password, Appointment appointment) {
+        super(name, username, phoneNumber, password, UserType.PATIENT);
+        this.appointment = appointment;
+    }
+
+    public User(Person user) {
+        super(user.getName(), user.getUsername(), user.getPhoneNumber(), user.getPassword(), UserType.PATIENT);
+    }
+
+    public User() {
+
+    }
+
+    public Appointment getAppointment() {
+        return appointment;
+    }
+
+    public void setAppointment(Appointment appointment) {
+        this.appointment = appointment;
+    }
+
+}
Index: time_registration/src/main/java/com/example/time_registration/model/enums/TreatmentType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/enums/TreatmentType.java b/time_registration/src/main/java/com/example/time_registration/model/enums/TreatmentType.java
new file mode 100644
--- /dev/null	(date 1702811234436)
+++ b/time_registration/src/main/java/com/example/time_registration/model/enums/TreatmentType.java	(date 1702811234436)
@@ -0,0 +1,7 @@
+package com.example.time_registration.model.enums;
+
+// Эмчилгээний төрөл
+public enum TreatmentType {
+    REHAB,
+    DRUGS,
+}
Index: time_registration/src/main/java/com/example/time_registration/model/enums/ExaminationType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/enums/ExaminationType.java b/time_registration/src/main/java/com/example/time_registration/model/enums/ExaminationType.java
new file mode 100644
--- /dev/null	(date 1702811234436)
+++ b/time_registration/src/main/java/com/example/time_registration/model/enums/ExaminationType.java	(date 1702811234436)
@@ -0,0 +1,7 @@
+package com.example.time_registration.model.enums;
+
+// Үзлэгийн төрөл
+public enum ExaminationType {
+    ANHAN,
+    DAVTAN,
+}
Index: time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentType.java b/time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentType.java
new file mode 100644
--- /dev/null	(date 1702811234435)
+++ b/time_registration/src/main/java/com/example/time_registration/model/enums/AppointmentType.java	(date 1702811234435)
@@ -0,0 +1,7 @@
+package com.example.time_registration.model.enums;
+
+// Цагийн төрөл
+public enum AppointmentType {
+    EXAMINATION,
+    TREATMENT,
+}
Index: time_registration/src/main/java/com/example/time_registration/model/entities/ExaminationAppointment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/entities/ExaminationAppointment.java b/time_registration/src/main/java/com/example/time_registration/model/entities/ExaminationAppointment.java
new file mode 100644
--- /dev/null	(date 1702811234431)
+++ b/time_registration/src/main/java/com/example/time_registration/model/entities/ExaminationAppointment.java	(date 1702811234431)
@@ -0,0 +1,37 @@
+package com.example.time_registration.model.entities;
+
+import com.example.time_registration.model.enums.ExaminationType;
+
+import java.time.LocalDateTime;
+
+// Үзлэгийн цаг
+public class ExaminationAppointment extends Appointment {
+
+    private ExaminationType examinationType;
+
+    public ExaminationAppointment(int id, LocalDateTime time, User user) {
+        super(id, time, user);
+    }
+
+    public ExaminationAppointment(LocalDateTime time, User user) {
+        super(time, user);
+    }
+
+    public ExaminationAppointment(int id, LocalDateTime time, User user, ExaminationType examinationType) {
+        super(id, time, user);
+        this.examinationType = examinationType;
+    }
+
+    public ExaminationAppointment(LocalDateTime time, User user, ExaminationType examinationType) {
+        super(time, user);
+        this.examinationType = examinationType;
+    }
+
+    public ExaminationType getExaminationType() {
+        return examinationType;
+    }
+
+    public void setExaminationType(ExaminationType examinationType) {
+        this.examinationType = examinationType;
+    }
+}
Index: time_registration/src/main/java/com/example/time_registration/model/factories/AppointmentFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/factories/AppointmentFactory.java b/time_registration/src/main/java/com/example/time_registration/model/factories/AppointmentFactory.java
new file mode 100644
--- /dev/null	(date 1702811234438)
+++ b/time_registration/src/main/java/com/example/time_registration/model/factories/AppointmentFactory.java	(date 1702811234438)
@@ -0,0 +1,23 @@
+package com.example.time_registration.model.factories;
+
+import com.example.time_registration.model.entities.Appointment;
+import com.example.time_registration.model.entities.ExaminationAppointment;
+import com.example.time_registration.model.entities.TreatmentAppointment;
+import com.example.time_registration.model.entities.User;
+import com.example.time_registration.model.enums.AppointmentType;
+
+import java.time.LocalDateTime;
+
+// Цагын фактори метод
+public class AppointmentFactory {
+    public static Appointment createAppointment(User user, LocalDateTime date, AppointmentType type) {
+        Appointment appointment = null;
+        switch (type) {
+            case EXAMINATION -> appointment = new ExaminationAppointment(date, user);
+            case TREATMENT -> appointment = new TreatmentAppointment(date, user);
+            default -> {
+            }
+        }
+        return appointment;
+    }
+}
Index: time_registration/src/main/java/com/example/time_registration/model/factories/UserFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/factories/UserFactory.java b/time_registration/src/main/java/com/example/time_registration/model/factories/UserFactory.java
new file mode 100644
--- /dev/null	(date 1702811234438)
+++ b/time_registration/src/main/java/com/example/time_registration/model/factories/UserFactory.java	(date 1702811234438)
@@ -0,0 +1,25 @@
+package com.example.time_registration.model.factories;
+
+import com.example.time_registration.model.entities.Doctor;
+import com.example.time_registration.model.entities.Nurse;
+import com.example.time_registration.model.entities.Person;
+import com.example.time_registration.model.entities.User;
+import com.example.time_registration.model.enums.UserType;
+
+// Хэрэглэгчийн фактори метод
+// Хэрэглэгчийн фактори метод
+public class UserFactory {
+    public static Person createUser(Person person, UserType type) {
+        switch (type) {
+            case DOCTOR:
+                return new Doctor(person.getName(), person.getUsername(), person.getPhoneNumber(), person.getPassword());
+            case NURSE:
+                return new Nurse(person.getName(), person.getUsername(), person.getPhoneNumber(), person.getPassword());
+            case PATIENT:
+                return new User(person.getName(), person.getUsername(), person.getPhoneNumber(), person.getPassword());
+            default:
+                throw new IllegalArgumentException("Invalid user type: " + type);
+        }
+    }
+}
+
Index: time_registration/src/main/java/com/example/time_registration/model/entities/Nurse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/entities/Nurse.java b/time_registration/src/main/java/com/example/time_registration/model/entities/Nurse.java
new file mode 100644
--- /dev/null	(date 1702811234432)
+++ b/time_registration/src/main/java/com/example/time_registration/model/entities/Nurse.java	(date 1702811234432)
@@ -0,0 +1,33 @@
+package com.example.time_registration.model.entities;
+
+import com.example.time_registration.model.enums.UserType;
+
+import java.util.ArrayList;
+import java.util.List;
+
+// Сувилагч
+public class Nurse extends Person {
+    private List<Appointment> appointments;
+
+    public Nurse(String name, String username, String phoneNumber, String password, List<Appointment> appointments) {
+        super(name, username, phoneNumber, password, UserType.NURSE);
+        this.appointments = appointments;
+    }
+
+    public Nurse(String name, String username, String phoneNumber, String password) {
+        super(name, username, phoneNumber, password, UserType.NURSE);
+    }
+
+    public Nurse(Person user) {
+        super(user.getName(), user.getUsername(), user.getPhoneNumber(), user.getPassword(), UserType.NURSE);
+        appointments = new ArrayList<>();
+    }
+
+    public List<Appointment> getAppointments() {
+        return appointments;
+    }
+
+    public void setAppointments(List<Appointment> appointments) {
+        this.appointments = appointments;
+    }
+}
Index: time_registration/src/main/java/com/example/time_registration/model/entities/Doctor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/entities/Doctor.java b/time_registration/src/main/java/com/example/time_registration/model/entities/Doctor.java
new file mode 100644
--- /dev/null	(date 1702811234431)
+++ b/time_registration/src/main/java/com/example/time_registration/model/entities/Doctor.java	(date 1702811234431)
@@ -0,0 +1,39 @@
+package com.example.time_registration.model.entities;
+
+import com.example.time_registration.model.enums.UserType;
+
+import java.util.ArrayList;
+import java.util.List;
+
+// Эмч
+public class Doctor extends Person {
+    private List<Appointment> appointments;
+
+    public Doctor(String name, String username, String phoneNumber, String password, List<Appointment> appointments) {
+        super(name, username, phoneNumber, password, UserType.DOCTOR);
+        this.appointments = appointments;
+    }
+    public Doctor(String name, String username, String phoneNumber, String password) {
+        super(name, username, phoneNumber, password, UserType.DOCTOR);
+        this.appointments = new ArrayList<>();
+    }
+
+    public Doctor(Person user) {
+        super(user.getName(), user.getUsername(), user.getPhoneNumber(), user.getPassword(), UserType.DOCTOR);
+        this.appointments = new ArrayList<>();
+    }
+
+    public Doctor(Doctor doctor) {
+        super(doctor.getName(), doctor.getUsername(), doctor.getPhoneNumber(), doctor.getPassword(), UserType.DOCTOR);
+        this.appointments = new ArrayList<>(doctor.getAppointments());
+    }
+
+
+    public List<Appointment> getAppointments() {
+        return appointments;
+    }
+
+    public void setAppointments(List<Appointment> appointments) {
+        this.appointments = appointments;
+    }
+}
Index: time_registration/src/main/java/com/example/time_registration/model/entities/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/entities/Person.java b/time_registration/src/main/java/com/example/time_registration/model/entities/Person.java
new file mode 100644
--- /dev/null	(date 1702811234433)
+++ b/time_registration/src/main/java/com/example/time_registration/model/entities/Person.java	(date 1702811234433)
@@ -0,0 +1,95 @@
+package com.example.time_registration.model.entities;
+
+import com.example.time_registration.model.enums.UserType;
+
+import java.io.Serializable;
+
+// Хүн bean
+public class Person implements Serializable {
+    private String name;
+    private String username;
+    private String phoneNumber;
+    private String password;
+
+    private UserType role;
+
+    public Person() {
+
+    }
+
+    public Person(String name, String username, String phoneNumber, String password) {
+        this.name = name;
+        this.username = username;
+        this.phoneNumber = phoneNumber;
+        this.password = password;
+    }
+
+    public Person(String name, String username, String phoneNumber, String password, UserType role) {
+        this.name = name;
+        this.username = username;
+        this.phoneNumber = phoneNumber;
+        this.password = password;
+        this.role = role;
+    }
+
+    public Person(String name, String username, String phoneNumber, String password, String role) {
+        this.name = name;
+        this.username = username;
+        this.phoneNumber = phoneNumber;
+        this.password = password;
+        switch (role) {
+            case "DOCTOR" -> this.role = UserType.DOCTOR;
+            case "NURSE" -> this.role = UserType.NURSE;
+            case "PATIENT" -> this.role = UserType.PATIENT;
+        }
+    }
+
+    public String getRole() {
+        String returnRole = "PATIENT";
+        switch (role) {
+            case DOCTOR -> returnRole = "DOCTOR";
+            case NURSE -> returnRole = "NURSE";
+            case PATIENT -> returnRole = "PATIENT";
+        }
+
+        return returnRole;
+    }
+
+    public void setRole(UserType type) {
+        this.role = type;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public String getPhoneNumber() {
+        return phoneNumber;
+    }
+
+    public void setPhoneNumber(String phoneNumber) {
+        this.phoneNumber = phoneNumber;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+
+
+}
Index: time_registration/src/main/java/com/example/time_registration/model/statuses/AppointmentStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/statuses/AppointmentStatus.java b/time_registration/src/main/java/com/example/time_registration/model/statuses/AppointmentStatus.java
new file mode 100644
--- /dev/null	(date 1702811234439)
+++ b/time_registration/src/main/java/com/example/time_registration/model/statuses/AppointmentStatus.java	(date 1702811234439)
@@ -0,0 +1,8 @@
+package com.example.time_registration.model.statuses;
+
+// Цагын статус буюу стейт үлгэр загвар
+public interface AppointmentStatus {
+    void done();
+    void canceled();
+    void waiting();
+}
Index: time_registration/src/main/java/com/example/time_registration/model/enums/UserType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/enums/UserType.java b/time_registration/src/main/java/com/example/time_registration/model/enums/UserType.java
new file mode 100644
--- /dev/null	(date 1702811234437)
+++ b/time_registration/src/main/java/com/example/time_registration/model/enums/UserType.java	(date 1702811234437)
@@ -0,0 +1,8 @@
+package com.example.time_registration.model.enums;
+
+// Хэрэглэгчийн төрөл
+public enum UserType {
+    DOCTOR,
+    NURSE,
+    PATIENT,
+}
Index: time_registration/src/main/java/com/example/time_registration/model/statuses/DoneStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/statuses/DoneStatus.java b/time_registration/src/main/java/com/example/time_registration/model/statuses/DoneStatus.java
new file mode 100644
--- /dev/null	(date 1702811234441)
+++ b/time_registration/src/main/java/com/example/time_registration/model/statuses/DoneStatus.java	(date 1702811234441)
@@ -0,0 +1,28 @@
+package com.example.time_registration.model.statuses;
+
+import com.example.time_registration.model.entities.Appointment;
+
+public class DoneStatus implements AppointmentStatus {
+    private Appointment appointment;
+
+    public DoneStatus(Appointment appointment) {
+        this.appointment = appointment;
+    }
+
+    @Override
+    public void done() {
+        System.out.println("Appointment is already done.");
+    }
+
+    @Override
+    public void canceled() {
+        appointment.setStatus(new CancelledStatus(appointment));
+        System.out.println("Appointment has been canceled.");
+    }
+
+    @Override
+    public void waiting() {
+        appointment.setStatus(new WaitingStatus(appointment));
+        System.out.println("Appointment has been rescheduled to waiting state.");
+    }
+}
Index: time_registration/src/main/java/com/example/time_registration/model/statuses/CancelledStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/statuses/CancelledStatus.java b/time_registration/src/main/java/com/example/time_registration/model/statuses/CancelledStatus.java
new file mode 100644
--- /dev/null	(date 1702811234440)
+++ b/time_registration/src/main/java/com/example/time_registration/model/statuses/CancelledStatus.java	(date 1702811234440)
@@ -0,0 +1,28 @@
+package com.example.time_registration.model.statuses;
+
+import com.example.time_registration.model.entities.Appointment;
+
+public class CancelledStatus implements AppointmentStatus {
+    private Appointment appointment;
+
+    public CancelledStatus(Appointment appointment) {
+        this.appointment = appointment;
+    }
+
+    @Override
+    public void done() {
+        appointment.setStatus(new DoneStatus(appointment));
+        System.out.println("Appointment has been marked as done.");
+    }
+
+    @Override
+    public void canceled() {
+        System.out.println("Appointment is already canceled.");
+    }
+
+    @Override
+    public void waiting() {
+        appointment.setStatus(new WaitingStatus(appointment));
+        System.out.println("Appointment has been rescheduled to waiting state.");
+    }
+}
Index: time_registration/src/main/java/com/example/time_registration/model/entities/Appointment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/time_registration/src/main/java/com/example/time_registration/model/entities/Appointment.java b/time_registration/src/main/java/com/example/time_registration/model/entities/Appointment.java
new file mode 100644
--- /dev/null	(date 1702811234430)
+++ b/time_registration/src/main/java/com/example/time_registration/model/entities/Appointment.java	(date 1702811234430)
@@ -0,0 +1,123 @@
+package com.example.time_registration.model.entities;
+
+import com.example.time_registration.model.enums.AppointmentStatusEnum;
+import com.example.time_registration.model.enums.AppointmentType;
+import com.example.time_registration.model.statuses.AppointmentStatus;
+import com.example.time_registration.model.statuses.CancelledStatus;
+import com.example.time_registration.model.statuses.DoneStatus;
+import com.example.time_registration.model.statuses.WaitingStatus;
+
+import java.io.Serializable;
+import java.time.LocalDateTime;
+
+// Цаг bean
+public class Appointment implements Serializable {
+    private int id;
+    private LocalDateTime time;
+    private User user;
+
+    private AppointmentType type;
+    private AppointmentStatus status;
+
+    public Appointment(int id, LocalDateTime time, User user) {
+        this.id = id;
+        this.time = time;
+        this.user = user;
+        this.status = new WaitingStatus(this);
+    }
+
+    public Appointment(LocalDateTime time, User user, AppointmentType type) {
+        this.time = time;
+        this.user = user;
+        this.type = type;
+        this.status = new WaitingStatus(this);
+    }
+
+    public Appointment(int id, LocalDateTime time, String type, User user) {
+        this.id = id;
+        this.time = time;
+        this.user = user;
+        this.status = new WaitingStatus(this);
+        switch (type) {
+            case "TREATMENT" -> this.type = AppointmentType.TREATMENT;
+            case "EXAMINATION" -> this.type = AppointmentType.EXAMINATION;
+        }
+    }
+
+    public Appointment(int id, LocalDateTime time, String status, String type, User user) {
+        this.id = id;
+        this.time = time;
+        this.user = user;
+        this.status = new WaitingStatus(this);
+
+        switch (status) {
+            case "WAITING" -> this.status = new WaitingStatus(this);
+            case "DONE" -> this.status = new DoneStatus(this);
+            case "CANCELLED" -> this.status = new CancelledStatus(this);
+        }
+
+        switch (type) {
+            case "TREATMENT" -> this.type = AppointmentType.TREATMENT;
+            case "EXAMINATION" -> this.type = AppointmentType.EXAMINATION;
+        }
+    }
+
+
+    public Appointment(LocalDateTime time, User user) {
+        this.time = time;
+        this.user = user;
+        this.status = new WaitingStatus(this);
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public LocalDateTime getTime() {
+        return time;
+    }
+
+    public void setTime(LocalDateTime time) {
+        this.time = time;
+    }
+
+    public User getUser() {
+        return user;
+    }
+
+    public void setUser(User user) {
+        this.user = user;
+    }
+
+    public AppointmentType getType() {
+        return type;
+    }
+
+    public void setType(AppointmentType type) {
+        this.type = type;
+    }
+
+    public AppointmentStatus getStatus() {
+        return status;
+    }
+
+    public AppointmentStatusEnum getStatusString() {
+        if (status instanceof WaitingStatus) {
+            return AppointmentStatusEnum.WAITING;
+        } else if (status instanceof DoneStatus) {
+            return AppointmentStatusEnum.DONE;
+        } else if (status instanceof CancelledStatus) {
+            return AppointmentStatusEnum.CANCELLED;
+        } else {
+            return AppointmentStatusEnum.UNKNOWN;
+        }
+    }
+
+    public void setStatus(AppointmentStatus status) {
+        this.status = status;
+    }
+}
